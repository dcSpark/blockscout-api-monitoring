name: Node.js CI

on: issue_comment

env:
  REGISTRY: dcspark
  REPOSITORY: blockscout-api-monitoring

jobs:
  set-vars:
    name: Set environment variables
    runs-on: ubuntu-latest
    steps:
      - run: echo " ${{ env.REGISTRY }}/${{ env.REPOSITORY }}"
    outputs:
      registry: ${{ env.REGISTRY }}
      repository: ${{ env.REPOSITORY }}
          
  build-and-deploy:
    if: always () && github.event.issue.pull_request && contains(github.event.comment.body, '#buildimage')
    needs: [set-vars]
    uses: dcSpark/blockscout-api-monitoring/.github/workflows/build-workflow.yml@main
    with:
      REGISTRY: ${{ needs.set-vars.outputs.registry }}
      REPOSITORY: ${{ needs.set-vars.outputs.repository }}
    secrets:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
      RO_GITHUB_TOKEN: ${{ secrets.RO_GITHUB_TOKEN }}
  
  pr_comment:
    # This job only runs for pull request comments
    name: PR comment
    needs: [build-and-deploy,set-vars]
    if: always () && github.event.issue.pull_request && contains(github.event.comment.body, '#buildimage')
    runs-on: ubuntu-latest
    steps:
      - name: PR comment with reactions
        uses: thollander/actions-comment-pull-request@v1
        with:
          message: |
            ### New docker image in PR is created - use following name: ${{ needs.build-and-deploy.outputs.tags }}**
            * actions url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}/
            * triggering comment url: ${{ github.event.comment.html_url }}
            * triggering user: [${{ github.event.comment.user.login }}](${{ github.event.comment.user.html_url }}) 
          #reactions: eyes, rocket
          pr_number: ${{ github.event.issue.number }}
        env:
          NUMBER: ${{ github.event.issue.number }}



